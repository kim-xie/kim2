/*! This file is created by kim */
webpackJsonp([0],[
/* 0 */,
/* 1 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n/*!\r\n * VERSION: beta 1.9.4\r\n * DATE: 2014-07-17\r\n * UPDATES AND DOCS AT: http://www.greensock.com\r\n *\r\n * @license Copyright (c) 2008-2014, GreenSock. All rights reserved.\r\n * This work is subject to the terms at http://www.greensock.com/terms_of_use.html or for\r\n * Club GreenSock members, the software agreement that was issued with your membership.\r\n * \r\n * @author: Jack Doyle, jack@greensock.com\r\n **/\nvar _gsScope = \"undefined\" != typeof module && module.exports && \"undefined\" != typeof global ? global : undefined || window;(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {\n  \"use strict\";\n  _gsScope._gsDefine(\"easing.Back\", [\"easing.Ease\"], function (t) {\n    var e,\n        i,\n        s,\n        r = _gsScope.GreenSockGlobals || _gsScope,\n        n = r.com.greensock,\n        a = 2 * Math.PI,\n        o = Math.PI / 2,\n        h = n._class,\n        l = function l(e, i) {\n      var s = h(\"easing.\" + e, function () {}, !0),\n          r = s.prototype = new t();return r.constructor = s, r.getRatio = i, s;\n    },\n        _ = t.register || function () {},\n        u = function u(t, e, i, s) {\n      var r = h(\"easing.\" + t, { easeOut: new e(), easeIn: new i(), easeInOut: new s() }, !0);return _(r, t), r;\n    },\n        c = function c(t, e, i) {\n      this.t = t, this.v = e, i && (this.next = i, i.prev = this, this.c = i.v - e, this.gap = i.t - t);\n    },\n        p = function p(e, i) {\n      var s = h(\"easing.\" + e, function (t) {\n        this._p1 = t || 0 === t ? t : 1.70158, this._p2 = 1.525 * this._p1;\n      }, !0),\n          r = s.prototype = new t();return r.constructor = s, r.getRatio = i, r.config = function (t) {\n        return new s(t);\n      }, s;\n    },\n        f = u(\"Back\", p(\"BackOut\", function (t) {\n      return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1;\n    }), p(\"BackIn\", function (t) {\n      return t * t * ((this._p1 + 1) * t - this._p1);\n    }), p(\"BackInOut\", function (t) {\n      return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2);\n    })),\n        m = h(\"easing.SlowMo\", function (t, e, i) {\n      e = e || 0 === e ? e : .7, null == t ? t = .7 : t > 1 && (t = 1), this._p = 1 !== t ? e : 0, this._p1 = (1 - t) / 2, this._p2 = t, this._p3 = this._p1 + this._p2, this._calcEnd = i === !0;\n    }, !0),\n        d = m.prototype = new t();return d.constructor = m, d.getRatio = function (t) {\n      var e = t + (.5 - t) * this._p;return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e;\n    }, m.ease = new m(.7, .7), d.config = m.config = function (t, e, i) {\n      return new m(t, e, i);\n    }, e = h(\"easing.SteppedEase\", function (t) {\n      t = t || 1, this._p1 = 1 / t, this._p2 = t + 1;\n    }, !0), d = e.prototype = new t(), d.constructor = e, d.getRatio = function (t) {\n      return 0 > t ? t = 0 : t >= 1 && (t = .999999999), (this._p2 * t >> 0) * this._p1;\n    }, d.config = e.config = function (t) {\n      return new e(t);\n    }, i = h(\"easing.RoughEase\", function (e) {\n      e = e || {};for (var i, s, r, n, a, o, h = e.taper || \"none\", l = [], _ = 0, u = 0 | (e.points || 20), p = u, f = e.randomize !== !1, m = e.clamp === !0, d = e.template instanceof t ? e.template : null, g = \"number\" == typeof e.strength ? .4 * e.strength : .4; --p > -1;) {\n        i = f ? Math.random() : 1 / u * p, s = d ? d.getRatio(i) : i, \"none\" === h ? r = g : \"out\" === h ? (n = 1 - i, r = n * n * g) : \"in\" === h ? r = i * i * g : .5 > i ? (n = 2 * i, r = .5 * n * n * g) : (n = 2 * (1 - i), r = .5 * n * n * g), f ? s += Math.random() * r - .5 * r : p % 2 ? s += .5 * r : s -= .5 * r, m && (s > 1 ? s = 1 : 0 > s && (s = 0)), l[_++] = { x: i, y: s };\n      }for (l.sort(function (t, e) {\n        return t.x - e.x;\n      }), o = new c(1, 1, null), p = u; --p > -1;) {\n        a = l[p], o = new c(a.x, a.y, o);\n      }this._prev = new c(0, 0, 0 !== o.t ? o : o.next);\n    }, !0), d = i.prototype = new t(), d.constructor = i, d.getRatio = function (t) {\n      var e = this._prev;if (t > e.t) {\n        for (; e.next && t >= e.t;) {\n          e = e.next;\n        }e = e.prev;\n      } else for (; e.prev && e.t >= t;) {\n        e = e.prev;\n      }return this._prev = e, e.v + (t - e.t) / e.gap * e.c;\n    }, d.config = function (t) {\n      return new i(t);\n    }, i.ease = new i(), u(\"Bounce\", l(\"BounceOut\", function (t) {\n      return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n    }), l(\"BounceIn\", function (t) {\n      return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375);\n    }), l(\"BounceInOut\", function (t) {\n      var e = .5 > t;return t = e ? 1 - 2 * t : 2 * t - 1, t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375, e ? .5 * (1 - t) : .5 * t + .5;\n    })), u(\"Circ\", l(\"CircOut\", function (t) {\n      return Math.sqrt(1 - (t -= 1) * t);\n    }), l(\"CircIn\", function (t) {\n      return -(Math.sqrt(1 - t * t) - 1);\n    }), l(\"CircInOut\", function (t) {\n      return 1 > (t *= 2) ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    })), s = function s(e, i, _s) {\n      var r = h(\"easing.\" + e, function (t, e) {\n        this._p1 = t || 1, this._p2 = e || _s, this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0);\n      }, !0),\n          n = r.prototype = new t();return n.constructor = r, n.getRatio = i, n.config = function (t, e) {\n        return new r(t, e);\n      }, r;\n    }, u(\"Elastic\", s(\"ElasticOut\", function (t) {\n      return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * a / this._p2) + 1;\n    }, .3), s(\"ElasticIn\", function (t) {\n      return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2));\n    }, .3), s(\"ElasticInOut\", function (t) {\n      return 1 > (t *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) : .5 * this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) + 1;\n    }, .45)), u(\"Expo\", l(\"ExpoOut\", function (t) {\n      return 1 - Math.pow(2, -10 * t);\n    }), l(\"ExpoIn\", function (t) {\n      return Math.pow(2, 10 * (t - 1)) - .001;\n    }), l(\"ExpoInOut\", function (t) {\n      return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)));\n    })), u(\"Sine\", l(\"SineOut\", function (t) {\n      return Math.sin(t * o);\n    }), l(\"SineIn\", function (t) {\n      return -Math.cos(t * o) + 1;\n    }), l(\"SineInOut\", function (t) {\n      return -.5 * (Math.cos(Math.PI * t) - 1);\n    })), h(\"easing.EaseLookup\", { find: function find(e) {\n        return t.map[e];\n      } }, !0), _(r.SlowMo, \"SlowMo\", \"ease,\"), _(i, \"RoughEase\", \"ease,\"), _(e, \"SteppedEase\", \"ease,\"), f;\n  }, !0);\n}), _gsScope._gsDefine && _gsScope._gsQueue.pop()();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n * VERSION: 1.13.1\r\n * DATE: 2014-07-22\r\n * UPDATES AND DOCS AT: http://www.greensock.com\r\n *\r\n * @license Copyright (c) 2008-2014, GreenSock. All rights reserved.\r\n * This work is subject to the terms at http://www.greensock.com/terms_of_use.html or for\r\n * Club GreenSock members, the software agreement that was issued with your membership.\r\n * \r\n * @author: Jack Doyle, jack@greensock.com\r\n */\n(function (t, e) {\n  \"use strict\";\n  var i = t.GreenSockGlobals = t.GreenSockGlobals || t;if (!i.TweenLite) {\n    var s,\n        n,\n        r,\n        a,\n        o,\n        l = function l(t) {\n      var e,\n          s = t.split(\".\"),\n          n = i;for (e = 0; s.length > e; e++) {\n        n[s[e]] = n = n[s[e]] || {};\n      }return n;\n    },\n        h = l(\"com.greensock\"),\n        _ = 1e-10,\n        u = function u(t) {\n      var e,\n          i = [],\n          s = t.length;for (e = 0; e !== s; i.push(t[e++])) {}return i;\n    },\n        f = function f() {},\n        m = function () {\n      var t = Object.prototype.toString,\n          e = t.call([]);return function (i) {\n        return null != i && (i instanceof Array || \"object\" == (typeof i === \"undefined\" ? \"undefined\" : _typeof(i)) && !!i.push && t.call(i) === e);\n      };\n    }(),\n        p = {},\n        c = function c(s, n, r, a) {\n      this.sc = p[s] ? p[s].sc : [], p[s] = this, this.gsClass = null, this.func = r;var o = [];this.check = function (h) {\n        for (var _, u, f, m, d = n.length, v = d; --d > -1;) {\n          (_ = p[n[d]] || new c(n[d], [])).gsClass ? (o[d] = _.gsClass, v--) : h && _.sc.push(this);\n        }if (0 === v && r) for (u = (\"com.greensock.\" + s).split(\".\"), f = u.pop(), m = l(u.join(\".\"))[f] = this.gsClass = r.apply(r, o), a && (i[f] = m,  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n          return m;\n        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : s === e && \"undefined\" != typeof module && module.exports && (module.exports = m)), d = 0; this.sc.length > d; d++) {\n          this.sc[d].check();\n        }\n      }, this.check(!0);\n    },\n        d = t._gsDefine = function (t, e, i, s) {\n      return new c(t, e, i, s);\n    },\n        v = h._class = function (t, e, i) {\n      return e = e || function () {}, d(t, [], function () {\n        return e;\n      }, i), e;\n    };d.globals = i;var g = [0, 0, 1, 1],\n        T = [],\n        y = v(\"easing.Ease\", function (t, e, i, s) {\n      this._func = t, this._type = i || 0, this._power = s || 0, this._params = e ? g.concat(e) : g;\n    }, !0),\n        w = y.map = {},\n        P = y.register = function (t, e, i, s) {\n      for (var n, r, a, o, l = e.split(\",\"), _ = l.length, u = (i || \"easeIn,easeOut,easeInOut\").split(\",\"); --_ > -1;) {\n        for (r = l[_], n = s ? v(\"easing.\" + r, null, !0) : h.easing[r] || {}, a = u.length; --a > -1;) {\n          o = u[a], w[r + \".\" + o] = w[o + r] = n[o] = t.getRatio ? t : t[o] || new t();\n        }\n      }\n    };for (r = y.prototype, r._calcEnd = !1, r.getRatio = function (t) {\n      if (this._func) return this._params[0] = t, this._func.apply(null, this._params);var e = this._type,\n          i = this._power,\n          s = 1 === e ? 1 - t : 2 === e ? t : .5 > t ? 2 * t : 2 * (1 - t);return 1 === i ? s *= s : 2 === i ? s *= s * s : 3 === i ? s *= s * s * s : 4 === i && (s *= s * s * s * s), 1 === e ? 1 - s : 2 === e ? s : .5 > t ? s / 2 : 1 - s / 2;\n    }, s = [\"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\"], n = s.length; --n > -1;) {\n      r = s[n] + \",Power\" + n, P(new y(null, null, 1, n), r, \"easeOut\", !0), P(new y(null, null, 2, n), r, \"easeIn\" + (0 === n ? \",easeNone\" : \"\")), P(new y(null, null, 3, n), r, \"easeInOut\");\n    }w.linear = h.easing.Linear.easeIn, w.swing = h.easing.Quad.easeInOut;var b = v(\"events.EventDispatcher\", function (t) {\n      this._listeners = {}, this._eventTarget = t || this;\n    });r = b.prototype, r.addEventListener = function (t, e, i, s, n) {\n      n = n || 0;var r,\n          l,\n          h = this._listeners[t],\n          _ = 0;for (null == h && (this._listeners[t] = h = []), l = h.length; --l > -1;) {\n        r = h[l], r.c === e && r.s === i ? h.splice(l, 1) : 0 === _ && n > r.pr && (_ = l + 1);\n      }h.splice(_, 0, { c: e, s: i, up: s, pr: n }), this !== a || o || a.wake();\n    }, r.removeEventListener = function (t, e) {\n      var i,\n          s = this._listeners[t];if (s) for (i = s.length; --i > -1;) {\n        if (s[i].c === e) return s.splice(i, 1), void 0;\n      }\n    }, r.dispatchEvent = function (t) {\n      var e,\n          i,\n          s,\n          n = this._listeners[t];if (n) for (e = n.length, i = this._eventTarget; --e > -1;) {\n        s = n[e], s.up ? s.c.call(s.s || i, { type: t, target: i }) : s.c.call(s.s || i);\n      }\n    };var k = t.requestAnimationFrame,\n        A = t.cancelAnimationFrame,\n        S = Date.now || function () {\n      return new Date().getTime();\n    },\n        x = S();for (s = [\"ms\", \"moz\", \"webkit\", \"o\"], n = s.length; --n > -1 && !k;) {\n      k = t[s[n] + \"RequestAnimationFrame\"], A = t[s[n] + \"CancelAnimationFrame\"] || t[s[n] + \"CancelRequestAnimationFrame\"];\n    }v(\"Ticker\", function (t, e) {\n      var i,\n          s,\n          n,\n          r,\n          l,\n          h = this,\n          u = S(),\n          m = e !== !1 && k,\n          p = 500,\n          c = 33,\n          d = function d(t) {\n        var e,\n            a,\n            o = S() - x;o > p && (u += o - c), x += o, h.time = (x - u) / 1e3, e = h.time - l, (!i || e > 0 || t === !0) && (h.frame++, l += e + (e >= r ? .004 : r - e), a = !0), t !== !0 && (n = s(d)), a && h.dispatchEvent(\"tick\");\n      };b.call(h), h.time = h.frame = 0, h.tick = function () {\n        d(!0);\n      }, h.lagSmoothing = function (t, e) {\n        p = t || 1 / _, c = Math.min(e, p, 0);\n      }, h.sleep = function () {\n        null != n && (m && A ? A(n) : clearTimeout(n), s = f, n = null, h === a && (o = !1));\n      }, h.wake = function () {\n        null !== n ? h.sleep() : h.frame > 10 && (x = S() - p + 5), s = 0 === i ? f : m && k ? k : function (t) {\n          return setTimeout(t, 0 | 1e3 * (l - h.time) + 1);\n        }, h === a && (o = !0), d(2);\n      }, h.fps = function (t) {\n        return arguments.length ? (i = t, r = 1 / (i || 60), l = this.time + r, h.wake(), void 0) : i;\n      }, h.useRAF = function (t) {\n        return arguments.length ? (h.sleep(), m = t, h.fps(i), void 0) : m;\n      }, h.fps(t), setTimeout(function () {\n        m && (!n || 5 > h.frame) && h.useRAF(!1);\n      }, 1500);\n    }), r = h.Ticker.prototype = new h.events.EventDispatcher(), r.constructor = h.Ticker;var C = v(\"core.Animation\", function (t, e) {\n      if (this.vars = e = e || {}, this._duration = this._totalDuration = t || 0, this._delay = Number(e.delay) || 0, this._timeScale = 1, this._active = e.immediateRender === !0, this.data = e.data, this._reversed = e.reversed === !0, B) {\n        o || a.wake();var i = this.vars.useFrames ? q : B;i.add(this, i._time), this.vars.paused && this.paused(!0);\n      }\n    });a = C.ticker = new h.Ticker(), r = C.prototype, r._dirty = r._gc = r._initted = r._paused = !1, r._totalTime = r._time = 0, r._rawPrevTime = -1, r._next = r._last = r._onUpdate = r._timeline = r.timeline = null, r._paused = !1;var R = function R() {\n      o && S() - x > 2e3 && a.wake(), setTimeout(R, 2e3);\n    };R(), r.play = function (t, e) {\n      return null != t && this.seek(t, e), this.reversed(!1).paused(!1);\n    }, r.pause = function (t, e) {\n      return null != t && this.seek(t, e), this.paused(!0);\n    }, r.resume = function (t, e) {\n      return null != t && this.seek(t, e), this.paused(!1);\n    }, r.seek = function (t, e) {\n      return this.totalTime(Number(t), e !== !1);\n    }, r.restart = function (t, e) {\n      return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0);\n    }, r.reverse = function (t, e) {\n      return null != t && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1);\n    }, r.render = function () {}, r.invalidate = function () {\n      return this;\n    }, r.isActive = function () {\n      var t,\n          e = this._timeline,\n          i = this._startTime;return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && i + this.totalDuration() / this._timeScale > t;\n    }, r._enabled = function (t, e) {\n      return o || a.wake(), this._gc = !t, this._active = this.isActive(), e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)), !1;\n    }, r._kill = function () {\n      return this._enabled(!1, !1);\n    }, r.kill = function (t, e) {\n      return this._kill(t, e), this;\n    }, r._uncache = function (t) {\n      for (var e = t ? this : this.timeline; e;) {\n        e._dirty = !0, e = e.timeline;\n      }return this;\n    }, r._swapSelfInParams = function (t) {\n      for (var e = t.length, i = t.concat(); --e > -1;) {\n        \"{self}\" === t[e] && (i[e] = this);\n      }return i;\n    }, r.eventCallback = function (t, e, i, s) {\n      if (\"on\" === (t || \"\").substr(0, 2)) {\n        var n = this.vars;if (1 === arguments.length) return n[t];null == e ? delete n[t] : (n[t] = e, n[t + \"Params\"] = m(i) && -1 !== i.join(\"\").indexOf(\"{self}\") ? this._swapSelfInParams(i) : i, n[t + \"Scope\"] = s), \"onUpdate\" === t && (this._onUpdate = e);\n      }return this;\n    }, r.delay = function (t) {\n      return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay), this._delay = t, this) : this._delay;\n    }, r.duration = function (t) {\n      return arguments.length ? (this._duration = this._totalDuration = t, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0), this) : (this._dirty = !1, this._duration);\n    }, r.totalDuration = function (t) {\n      return this._dirty = !1, arguments.length ? this.duration(t) : this._totalDuration;\n    }, r.time = function (t, e) {\n      return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(t > this._duration ? this._duration : t, e)) : this._time;\n    }, r.totalTime = function (t, e, i) {\n      if (o || a.wake(), !arguments.length) return this._totalTime;if (this._timeline) {\n        if (0 > t && !i && (t += this.totalDuration()), this._timeline.smoothChildTiming) {\n          this._dirty && this.totalDuration();var s = this._totalDuration,\n              n = this._timeline;if (t > s && !i && (t = s), this._startTime = (this._paused ? this._pauseTime : n._time) - (this._reversed ? s - t : t) / this._timeScale, n._dirty || this._uncache(!1), n._timeline) for (; n._timeline;) {\n            n._timeline._time !== (n._startTime + n._totalTime) / n._timeScale && n.totalTime(n._totalTime, !0), n = n._timeline;\n          }\n        }this._gc && this._enabled(!0, !1), (this._totalTime !== t || 0 === this._duration) && (this.render(t, e, !1), O.length && M());\n      }return this;\n    }, r.progress = r.totalProgress = function (t, e) {\n      return arguments.length ? this.totalTime(this.duration() * t, e) : this._time / this.duration();\n    }, r.startTime = function (t) {\n      return arguments.length ? (t !== this._startTime && (this._startTime = t, this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)), this) : this._startTime;\n    }, r.timeScale = function (t) {\n      if (!arguments.length) return this._timeScale;if (t = t || _, this._timeline && this._timeline.smoothChildTiming) {\n        var e = this._pauseTime,\n            i = e || 0 === e ? e : this._timeline.totalTime();this._startTime = i - (i - this._startTime) * this._timeScale / t;\n      }return this._timeScale = t, this._uncache(!1);\n    }, r.reversed = function (t) {\n      return arguments.length ? (t != this._reversed && (this._reversed = t, this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this) : this._reversed;\n    }, r.paused = function (t) {\n      if (!arguments.length) return this._paused;if (t != this._paused && this._timeline) {\n        o || t || a.wake();var e = this._timeline,\n            i = e.rawTime(),\n            s = i - this._pauseTime;!t && e.smoothChildTiming && (this._startTime += s, this._uncache(!1)), this._pauseTime = t ? i : null, this._paused = t, this._active = this.isActive(), !t && 0 !== s && this._initted && this.duration() && this.render(e.smoothChildTiming ? this._totalTime : (i - this._startTime) / this._timeScale, !0, !0);\n      }return this._gc && !t && this._enabled(!0, !1), this;\n    };var D = v(\"core.SimpleTimeline\", function (t) {\n      C.call(this, 0, t), this.autoRemoveChildren = this.smoothChildTiming = !0;\n    });r = D.prototype = new C(), r.constructor = D, r.kill()._gc = !1, r._first = r._last = null, r._sortChildren = !1, r.add = r.insert = function (t, e) {\n      var i, s;if (t._startTime = Number(e || 0) + t._delay, t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale), t.timeline && t.timeline._remove(t, !0), t.timeline = t._timeline = this, t._gc && t._enabled(!0, !0), i = this._last, this._sortChildren) for (s = t._startTime; i && i._startTime > s;) {\n        i = i._prev;\n      }return i ? (t._next = i._next, i._next = t) : (t._next = this._first, this._first = t), t._next ? t._next._prev = t : this._last = t, t._prev = i, this._timeline && this._uncache(!0), this;\n    }, r._remove = function (t, e) {\n      return t.timeline === this && (e || t._enabled(!1, !0), t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next), t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev), t._next = t._prev = t.timeline = null, this._timeline && this._uncache(!0)), this;\n    }, r.render = function (t, e, i) {\n      var s,\n          n = this._first;for (this._totalTime = this._time = this._rawPrevTime = t; n;) {\n        s = n._next, (n._active || t >= n._startTime && !n._paused) && (n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)), n = s;\n      }\n    }, r.rawTime = function () {\n      return o || a.wake(), this._totalTime;\n    };var I = v(\"TweenLite\", function (e, i, s) {\n      if (C.call(this, i, s), this.render = I.prototype.render, null == e) throw \"Cannot tween a null target.\";this.target = e = \"string\" != typeof e ? e : I.selector(e) || e;var n,\n          r,\n          a,\n          o = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType),\n          l = this.vars.overwrite;if (this._overwrite = l = null == l ? Q[I.defaultOverwrite] : \"number\" == typeof l ? l >> 0 : Q[l], (o || e instanceof Array || e.push && m(e)) && \"number\" != typeof e[0]) for (this._targets = a = u(e), this._propLookup = [], this._siblings = [], n = 0; a.length > n; n++) {\n        r = a[n], r ? \"string\" != typeof r ? r.length && r !== t && r[0] && (r[0] === t || r[0].nodeType && r[0].style && !r.nodeType) ? (a.splice(n--, 1), this._targets = a = a.concat(u(r))) : (this._siblings[n] = $(r, this, !1), 1 === l && this._siblings[n].length > 1 && K(r, this, null, 1, this._siblings[n])) : (r = a[n--] = I.selector(r), \"string\" == typeof r && a.splice(n + 1, 1)) : a.splice(n--, 1);\n      } else this._propLookup = {}, this._siblings = $(e, this, !1), 1 === l && this._siblings.length > 1 && K(e, this, null, 1, this._siblings);(this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -_, this.render(-this._delay));\n    }, !0),\n        E = function E(e) {\n      return e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType);\n    },\n        z = function z(t, e) {\n      var i,\n          s = {};for (i in t) {\n        G[i] || i in e && \"transform\" !== i && \"x\" !== i && \"y\" !== i && \"width\" !== i && \"height\" !== i && \"className\" !== i && \"border\" !== i || !(!U[i] || U[i] && U[i]._autoCSS) || (s[i] = t[i], delete t[i]);\n      }t.css = s;\n    };r = I.prototype = new C(), r.constructor = I, r.kill()._gc = !1, r.ratio = 0, r._firstPT = r._targets = r._overwrittenProps = r._startAt = null, r._notifyPluginsOfEnabled = r._lazy = !1, I.version = \"1.13.1\", I.defaultEase = r._ease = new y(null, null, 1, 1), I.defaultOverwrite = \"auto\", I.ticker = a, I.autoSleep = !0, I.lagSmoothing = function (t, e) {\n      a.lagSmoothing(t, e);\n    }, I.selector = t.$ || t.jQuery || function (e) {\n      var i = t.$ || t.jQuery;return i ? (I.selector = i, i(e)) : \"undefined\" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(\"#\" === e.charAt(0) ? e.substr(1) : e);\n    };var O = [],\n        L = {},\n        N = I._internals = { isArray: m, isSelector: E, lazyTweens: O },\n        U = I._plugins = {},\n        F = N.tweenLookup = {},\n        j = 0,\n        G = N.reservedProps = { ease: 1, delay: 1, overwrite: 1, onComplete: 1, onCompleteParams: 1, onCompleteScope: 1, useFrames: 1, runBackwards: 1, startAt: 1, onUpdate: 1, onUpdateParams: 1, onUpdateScope: 1, onStart: 1, onStartParams: 1, onStartScope: 1, onReverseComplete: 1, onReverseCompleteParams: 1, onReverseCompleteScope: 1, onRepeat: 1, onRepeatParams: 1, onRepeatScope: 1, easeParams: 1, yoyo: 1, immediateRender: 1, repeat: 1, repeatDelay: 1, data: 1, paused: 1, reversed: 1, autoCSS: 1, lazy: 1 },\n        Q = { none: 0, all: 1, auto: 2, concurrent: 3, allOnStart: 4, preexisting: 5, \"true\": 1, \"false\": 0 },\n        q = C._rootFramesTimeline = new D(),\n        B = C._rootTimeline = new D(),\n        M = N.lazyRender = function () {\n      var t = O.length;for (L = {}; --t > -1;) {\n        s = O[t], s && s._lazy !== !1 && (s.render(s._lazy, !1, !0), s._lazy = !1);\n      }O.length = 0;\n    };B._startTime = a.time, q._startTime = a.frame, B._active = q._active = !0, setTimeout(M, 1), C._updateRoot = I.render = function () {\n      var t, e, i;if (O.length && M(), B.render((a.time - B._startTime) * B._timeScale, !1, !1), q.render((a.frame - q._startTime) * q._timeScale, !1, !1), O.length && M(), !(a.frame % 120)) {\n        for (i in F) {\n          for (e = F[i].tweens, t = e.length; --t > -1;) {\n            e[t]._gc && e.splice(t, 1);\n          }0 === e.length && delete F[i];\n        }if (i = B._first, (!i || i._paused) && I.autoSleep && !q._first && 1 === a._listeners.tick.length) {\n          for (; i && i._paused;) {\n            i = i._next;\n          }i || a.sleep();\n        }\n      }\n    }, a.addEventListener(\"tick\", C._updateRoot);var $ = function $(t, e, i) {\n      var s,\n          n,\n          r = t._gsTweenID;if (F[r || (t._gsTweenID = r = \"t\" + j++)] || (F[r] = { target: t, tweens: [] }), e && (s = F[r].tweens, s[n = s.length] = e, i)) for (; --n > -1;) {\n        s[n] === e && s.splice(n, 1);\n      }return F[r].tweens;\n    },\n        K = function K(t, e, i, s, n) {\n      var r, a, o, l;if (1 === s || s >= 4) {\n        for (l = n.length, r = 0; l > r; r++) {\n          if ((o = n[r]) !== e) o._gc || o._enabled(!1, !1) && (a = !0);else if (5 === s) break;\n        }return a;\n      }var h,\n          u = e._startTime + _,\n          f = [],\n          m = 0,\n          p = 0 === e._duration;for (r = n.length; --r > -1;) {\n        (o = n[r]) === e || o._gc || o._paused || (o._timeline !== e._timeline ? (h = h || H(e, 0, p), 0 === H(o, h, p) && (f[m++] = o)) : u >= o._startTime && o._startTime + o.totalDuration() / o._timeScale > u && ((p || !o._initted) && 2e-10 >= u - o._startTime || (f[m++] = o)));\n      }for (r = m; --r > -1;) {\n        o = f[r], 2 === s && o._kill(i, t) && (a = !0), (2 !== s || !o._firstPT && o._initted) && o._enabled(!1, !1) && (a = !0);\n      }return a;\n    },\n        H = function H(t, e, i) {\n      for (var s = t._timeline, n = s._timeScale, r = t._startTime; s._timeline;) {\n        if (r += s._startTime, n *= s._timeScale, s._paused) return -100;s = s._timeline;\n      }return r /= n, r > e ? r - e : i && r === e || !t._initted && 2 * _ > r - e ? _ : (r += t.totalDuration() / t._timeScale / n) > e + _ ? 0 : r - e - _;\n    };r._init = function () {\n      var t,\n          e,\n          i,\n          s,\n          n,\n          r = this.vars,\n          a = this._overwrittenProps,\n          o = this._duration,\n          l = !!r.immediateRender,\n          h = r.ease;if (r.startAt) {\n        this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), n = {};for (s in r.startAt) {\n          n[s] = r.startAt[s];\n        }if (n.overwrite = !1, n.immediateRender = !0, n.lazy = l && r.lazy !== !1, n.startAt = n.delay = null, this._startAt = I.to(this.target, 0, n), l) if (this._time > 0) this._startAt = null;else if (0 !== o) return;\n      } else if (r.runBackwards && 0 !== o) if (this._startAt) this._startAt.render(-1, !0), this._startAt.kill(), this._startAt = null;else {\n        i = {};for (s in r) {\n          G[s] && \"autoCSS\" !== s || (i[s] = r[s]);\n        }if (i.overwrite = 0, i.data = \"isFromStart\", i.lazy = l && r.lazy !== !1, i.immediateRender = l, this._startAt = I.to(this.target, 0, i), l) {\n          if (0 === this._time) return;\n        } else this._startAt._init(), this._startAt._enabled(!1);\n      }if (this._ease = h = h ? h instanceof y ? h : \"function\" == typeof h ? new y(h, r.easeParams) : w[h] || I.defaultEase : I.defaultEase, r.easeParams instanceof Array && h.config && (this._ease = h.config.apply(h, r.easeParams)), this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets) for (t = this._targets.length; --t > -1;) {\n        this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], a ? a[t] : null) && (e = !0);\n      } else e = this._initProps(this.target, this._propLookup, this._siblings, a);if (e && I._onPluginEvent(\"_onInitAllProps\", this), a && (this._firstPT || \"function\" != typeof this.target && this._enabled(!1, !1)), r.runBackwards) for (i = this._firstPT; i;) {\n        i.s += i.c, i.c = -i.c, i = i._next;\n      }this._onUpdate = r.onUpdate, this._initted = !0;\n    }, r._initProps = function (e, i, s, n) {\n      var r, a, o, l, h, _;if (null == e) return !1;L[e._gsTweenID] && M(), this.vars.css || e.style && e !== t && e.nodeType && U.css && this.vars.autoCSS !== !1 && z(this.vars, e);for (r in this.vars) {\n        if (_ = this.vars[r], G[r]) _ && (_ instanceof Array || _.push && m(_)) && -1 !== _.join(\"\").indexOf(\"{self}\") && (this.vars[r] = _ = this._swapSelfInParams(_, this));else if (U[r] && (l = new U[r]())._onInitTween(e, this.vars[r], this)) {\n          for (this._firstPT = h = { _next: this._firstPT, t: l, p: \"setRatio\", s: 0, c: 1, f: !0, n: r, pg: !0, pr: l._priority }, a = l._overwriteProps.length; --a > -1;) {\n            i[l._overwriteProps[a]] = this._firstPT;\n          }(l._priority || l._onInitAllProps) && (o = !0), (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0);\n        } else this._firstPT = i[r] = h = { _next: this._firstPT, t: e, p: r, f: \"function\" == typeof e[r], n: r, pg: !1, pr: 0 }, h.s = h.f ? e[r.indexOf(\"set\") || \"function\" != typeof e[\"get\" + r.substr(3)] ? r : \"get\" + r.substr(3)]() : parseFloat(e[r]), h.c = \"string\" == typeof _ && \"=\" === _.charAt(1) ? parseInt(_.charAt(0) + \"1\", 10) * Number(_.substr(2)) : Number(_) - h.s || 0;h && h._next && (h._next._prev = h);\n      }return n && this._kill(n, e) ? this._initProps(e, i, s, n) : this._overwrite > 1 && this._firstPT && s.length > 1 && K(e, this, i, this._overwrite, s) ? (this._kill(i, e), this._initProps(e, i, s, n)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (L[e._gsTweenID] = !0), o);\n    }, r.render = function (t, e, i) {\n      var s,\n          n,\n          r,\n          a,\n          o = this._time,\n          l = this._duration,\n          h = this._rawPrevTime;if (t >= l) this._totalTime = this._time = l, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (s = !0, n = \"onComplete\"), 0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0), (0 === t || 0 > h || h === _) && h !== t && (i = !0, h > _ && (n = \"onReverseComplete\")), this._rawPrevTime = a = !e || t || h === t ? t : _);else if (1e-7 > t) this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== o || 0 === l && h > 0 && h !== _) && (n = \"onReverseComplete\", s = this._reversed), 0 > t ? (this._active = !1, 0 === l && (this._initted || !this.vars.lazy || i) && (h >= 0 && (i = !0), this._rawPrevTime = a = !e || t || h === t ? t : _)) : this._initted || (i = !0);else if (this._totalTime = this._time = t, this._easeType) {\n        var u = t / l,\n            f = this._easeType,\n            m = this._easePower;(1 === f || 3 === f && u >= .5) && (u = 1 - u), 3 === f && (u *= 2), 1 === m ? u *= u : 2 === m ? u *= u * u : 3 === m ? u *= u * u * u : 4 === m && (u *= u * u * u * u), this.ratio = 1 === f ? 1 - u : 2 === f ? u : .5 > t / l ? u / 2 : 1 - u / 2;\n      } else this.ratio = this._ease.getRatio(t / l);if (this._time !== o || i) {\n        if (!this._initted) {\n          if (this._init(), !this._initted || this._gc) return;if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) return this._time = this._totalTime = o, this._rawPrevTime = h, O.push(this), this._lazy = t, void 0;this._time && !s ? this.ratio = this._ease.getRatio(this._time / l) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));\n        }for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== o && t >= 0 && (this._active = !0), 0 === o && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : n || (n = \"_dummyGS\")), this.vars.onStart && (0 !== this._time || 0 === l) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || T))), r = this._firstPT; r;) {\n          r.f ? r.t[r.p](r.c * this.ratio + r.s) : r.t[r.p] = r.c * this.ratio + r.s, r = r._next;\n        }this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i), e || (this._time !== o || s) && this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || T)), n && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[n] && this.vars[n].apply(this.vars[n + \"Scope\"] || this, this.vars[n + \"Params\"] || T), 0 === l && this._rawPrevTime === _ && a !== _ && (this._rawPrevTime = 0));\n      }\n    }, r._kill = function (t, e) {\n      if (\"all\" === t && (t = null), null == t && (null == e || e === this.target)) return this._lazy = !1, this._enabled(!1, !1);e = \"string\" != typeof e ? e || this._targets || this.target : I.selector(e) || e;var i, s, n, r, a, o, l, h;if ((m(e) || E(e)) && \"number\" != typeof e[0]) for (i = e.length; --i > -1;) {\n        this._kill(t, e[i]) && (o = !0);\n      } else {\n        if (this._targets) {\n          for (i = this._targets.length; --i > -1;) {\n            if (e === this._targets[i]) {\n              a = this._propLookup[i] || {}, this._overwrittenProps = this._overwrittenProps || [], s = this._overwrittenProps[i] = t ? this._overwrittenProps[i] || {} : \"all\";break;\n            }\n          }\n        } else {\n          if (e !== this.target) return !1;a = this._propLookup, s = this._overwrittenProps = t ? this._overwrittenProps || {} : \"all\";\n        }if (a) {\n          l = t || a, h = t !== s && \"all\" !== s && t !== a && (\"object\" != (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) || !t._tempKill);for (n in l) {\n            (r = a[n]) && (r.pg && r.t._kill(l) && (o = !0), r.pg && 0 !== r.t._overwriteProps.length || (r._prev ? r._prev._next = r._next : r === this._firstPT && (this._firstPT = r._next), r._next && (r._next._prev = r._prev), r._next = r._prev = null), delete a[n]), h && (s[n] = 1);\n          }!this._firstPT && this._initted && this._enabled(!1, !1);\n        }\n      }return o;\n    }, r.invalidate = function () {\n      return this._notifyPluginsOfEnabled && I._onPluginEvent(\"_onDisable\", this), this._firstPT = null, this._overwrittenProps = null, this._onUpdate = null, this._startAt = null, this._initted = this._active = this._notifyPluginsOfEnabled = this._lazy = !1, this._propLookup = this._targets ? {} : [], this;\n    }, r._enabled = function (t, e) {\n      if (o || a.wake(), t && this._gc) {\n        var i,\n            s = this._targets;if (s) for (i = s.length; --i > -1;) {\n          this._siblings[i] = $(s[i], this, !0);\n        } else this._siblings = $(this.target, this, !0);\n      }return C.prototype._enabled.call(this, t, e), this._notifyPluginsOfEnabled && this._firstPT ? I._onPluginEvent(t ? \"_onEnable\" : \"_onDisable\", this) : !1;\n    }, I.to = function (t, e, i) {\n      return new I(t, e, i);\n    }, I.from = function (t, e, i) {\n      return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new I(t, e, i);\n    }, I.fromTo = function (t, e, i, s) {\n      return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, new I(t, e, s);\n    }, I.delayedCall = function (t, e, i, s, n) {\n      return new I(e, 0, { delay: t, onComplete: e, onCompleteParams: i, onCompleteScope: s, onReverseComplete: e, onReverseCompleteParams: i, onReverseCompleteScope: s, immediateRender: !1, useFrames: n, overwrite: 0 });\n    }, I.set = function (t, e) {\n      return new I(t, 0, e);\n    }, I.getTweensOf = function (t, e) {\n      if (null == t) return [];t = \"string\" != typeof t ? t : I.selector(t) || t;var i, s, n, r;if ((m(t) || E(t)) && \"number\" != typeof t[0]) {\n        for (i = t.length, s = []; --i > -1;) {\n          s = s.concat(I.getTweensOf(t[i], e));\n        }for (i = s.length; --i > -1;) {\n          for (r = s[i], n = i; --n > -1;) {\n            r === s[n] && s.splice(i, 1);\n          }\n        }\n      } else for (s = $(t).concat(), i = s.length; --i > -1;) {\n        (s[i]._gc || e && !s[i].isActive()) && s.splice(i, 1);\n      }return s;\n    }, I.killTweensOf = I.killDelayedCallsTo = function (t, e, i) {\n      \"object\" == (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)) && (i = e, e = !1);for (var s = I.getTweensOf(t, e), n = s.length; --n > -1;) {\n        s[n]._kill(i, t);\n      }\n    };var J = v(\"plugins.TweenPlugin\", function (t, e) {\n      this._overwriteProps = (t || \"\").split(\",\"), this._propName = this._overwriteProps[0], this._priority = e || 0, this._super = J.prototype;\n    }, !0);if (r = J.prototype, J.version = \"1.10.1\", J.API = 2, r._firstPT = null, r._addTween = function (t, e, i, s, n, r) {\n      var a, o;return null != s && (a = \"number\" == typeof s || \"=\" !== s.charAt(1) ? Number(s) - i : parseInt(s.charAt(0) + \"1\", 10) * Number(s.substr(2))) ? (this._firstPT = o = { _next: this._firstPT, t: t, p: e, s: i, c: a, f: \"function\" == typeof t[e], n: n || e, r: r }, o._next && (o._next._prev = o), o) : void 0;\n    }, r.setRatio = function (t) {\n      for (var e, i = this._firstPT, s = 1e-6; i;) {\n        e = i.c * t + i.s, i.r ? e = Math.round(e) : s > e && e > -s && (e = 0), i.f ? i.t[i.p](e) : i.t[i.p] = e, i = i._next;\n      }\n    }, r._kill = function (t) {\n      var e,\n          i = this._overwriteProps,\n          s = this._firstPT;if (null != t[this._propName]) this._overwriteProps = [];else for (e = i.length; --e > -1;) {\n        null != t[i[e]] && i.splice(e, 1);\n      }for (; s;) {\n        null != t[s.n] && (s._next && (s._next._prev = s._prev), s._prev ? (s._prev._next = s._next, s._prev = null) : this._firstPT === s && (this._firstPT = s._next)), s = s._next;\n      }return !1;\n    }, r._roundProps = function (t, e) {\n      for (var i = this._firstPT; i;) {\n        (t[this._propName] || null != i.n && t[i.n.split(this._propName + \"_\").join(\"\")]) && (i.r = e), i = i._next;\n      }\n    }, I._onPluginEvent = function (t, e) {\n      var i,\n          s,\n          n,\n          r,\n          a,\n          o = e._firstPT;if (\"_onInitAllProps\" === t) {\n        for (; o;) {\n          for (a = o._next, s = n; s && s.pr > o.pr;) {\n            s = s._next;\n          }(o._prev = s ? s._prev : r) ? o._prev._next = o : n = o, (o._next = s) ? s._prev = o : r = o, o = a;\n        }o = e._firstPT = n;\n      }for (; o;) {\n        o.pg && \"function\" == typeof o.t[t] && o.t[t]() && (i = !0), o = o._next;\n      }return i;\n    }, J.activate = function (t) {\n      for (var e = t.length; --e > -1;) {\n        t[e].API === J.API && (U[new t[e]()._propName] = t[e]);\n      }return !0;\n    }, d.plugin = function (t) {\n      if (!(t && t.propName && t.init && t.API)) throw \"illegal plugin definition.\";var e,\n          i = t.propName,\n          s = t.priority || 0,\n          n = t.overwriteProps,\n          r = { init: \"_onInitTween\", set: \"setRatio\", kill: \"_kill\", round: \"_roundProps\", initAll: \"_onInitAllProps\" },\n          a = v(\"plugins.\" + i.charAt(0).toUpperCase() + i.substr(1) + \"Plugin\", function () {\n        J.call(this, i, s), this._overwriteProps = n || [];\n      }, t.global === !0),\n          o = a.prototype = new J(i);o.constructor = a, a.API = t.API;for (e in r) {\n        \"function\" == typeof t[e] && (o[r[e]] = t[e]);\n      }return a.version = t.version, J.activate([a]), a;\n    }, s = t._gsQueue) {\n      for (n = 0; s.length > n; n++) {\n        s[n]();\n      }for (r in p) {\n        p[r].func || t.console.log(\"GSAP encountered missing dependency: com.greensock.\" + r);\n      }\n    }o = !1;\n  }\n})(\"undefined\" != typeof module && module.exports && \"undefined\" != typeof global ? global : undefined || window, \"TweenLite\");\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n\n    var width,\n        height,\n        largeHeader,\n        canvas,\n        ctx,\n        points,\n        target,\n        animateHeader = true;\n\n    // Main\n    initHeader();\n    initAnimation();\n    addListeners();\n\n    function initHeader() {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        target = { x: width / 2, y: height / 2 };\n\n        largeHeader = document.getElementById('large-header');\n        largeHeader.style.height = height + 'px';\n\n        canvas = document.getElementById('demo-canvas');\n        canvas.width = width;\n        canvas.height = height;\n        ctx = canvas.getContext('2d');\n\n        // create points\n        points = [];\n        for (var x = 0; x < width; x = x + width / 20) {\n            for (var y = 0; y < height; y = y + height / 20) {\n                var px = x + Math.random() * width / 20;\n                var py = y + Math.random() * height / 20;\n                var p = { x: px, originX: px, y: py, originY: py };\n                points.push(p);\n            }\n        }\n\n        // for each point find the 5 closest points\n        for (var i = 0; i < points.length; i++) {\n            var closest = [];\n            var p1 = points[i];\n            for (var j = 0; j < points.length; j++) {\n                var p2 = points[j];\n                if (!(p1 == p2)) {\n                    var placed = false;\n                    for (var k = 0; k < 5; k++) {\n                        if (!placed) {\n                            if (closest[k] == undefined) {\n                                closest[k] = p2;\n                                placed = true;\n                            }\n                        }\n                    }\n\n                    for (var k = 0; k < 5; k++) {\n                        if (!placed) {\n                            if (getDistance(p1, p2) < getDistance(p1, closest[k])) {\n                                closest[k] = p2;\n                                placed = true;\n                            }\n                        }\n                    }\n                }\n            }\n            p1.closest = closest;\n        }\n\n        // assign a circle to each point\n        for (var i in points) {\n            var c = new Circle(points[i], 2 + Math.random() * 2, 'rgba(255,255,255,0.3)');\n            points[i].circle = c;\n        }\n    }\n\n    // Event handling\n    function addListeners() {\n        if (!('ontouchstart' in window)) {\n            window.addEventListener('mousemove', mouseMove);\n        }\n        window.addEventListener('scroll', scrollCheck);\n        window.addEventListener('resize', resize);\n    }\n\n    function mouseMove(e) {\n        var posx = 0;\n        var posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n        target.x = posx;\n        target.y = posy;\n    }\n\n    function scrollCheck() {\n        if (document.body.scrollTop > height) animateHeader = false;else animateHeader = true;\n    }\n\n    function resize() {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        largeHeader.style.height = height + 'px';\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    // animation\n    function initAnimation() {\n        animate();\n        for (var i in points) {\n            shiftPoint(points[i]);\n        }\n    }\n\n    function animate() {\n        if (animateHeader) {\n            ctx.clearRect(0, 0, width, height);\n            for (var i in points) {\n                // detect points in range\n                if (Math.abs(getDistance(target, points[i])) < 4000) {\n                    points[i].active = 0.3;\n                    points[i].circle.active = 0.6;\n                } else if (Math.abs(getDistance(target, points[i])) < 20000) {\n                    points[i].active = 0.1;\n                    points[i].circle.active = 0.3;\n                } else if (Math.abs(getDistance(target, points[i])) < 40000) {\n                    points[i].active = 0.02;\n                    points[i].circle.active = 0.1;\n                } else {\n                    points[i].active = 0;\n                    points[i].circle.active = 0;\n                }\n\n                drawLines(points[i]);\n                points[i].circle.draw();\n            }\n        }\n        requestAnimationFrame(animate);\n    }\n\n    function shiftPoint(p) {\n        TweenLite.to(p, 1 + 1 * Math.random(), { x: p.originX - 50 + Math.random() * 100,\n            y: p.originY - 50 + Math.random() * 100, ease: Circ.easeInOut,\n            onComplete: function onComplete() {\n                shiftPoint(p);\n            } });\n    }\n\n    // Canvas manipulation\n    function drawLines(p) {\n        if (!p.active) return;\n        for (var i in p.closest) {\n            ctx.beginPath();\n            ctx.moveTo(p.x, p.y);\n            ctx.lineTo(p.closest[i].x, p.closest[i].y);\n            ctx.strokeStyle = 'rgba(156,217,249,' + p.active + ')';\n            ctx.stroke();\n        }\n    }\n\n    function Circle(pos, rad, color) {\n        var _this = this;\n\n        // constructor\n        (function () {\n            _this.pos = pos || null;\n            _this.radius = rad || null;\n            _this.color = color || null;\n        })();\n\n        this.draw = function () {\n            if (!_this.active) return;\n            ctx.beginPath();\n            ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba(156,217,249,' + _this.active + ')';\n            ctx.fill();\n        };\n    }\n\n    // Util\n    function getDistance(p1, p2) {\n        return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n    }\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvbG9naW4vanMvZGVtby0xLmpzPzVjYjgiXSwibmFtZXMiOlsid2lkdGgiLCJoZWlnaHQiLCJsYXJnZUhlYWRlciIsImNhbnZhcyIsImN0eCIsInBvaW50cyIsInRhcmdldCIsImFuaW1hdGVIZWFkZXIiLCJpbml0SGVhZGVyIiwiaW5pdEFuaW1hdGlvbiIsImFkZExpc3RlbmVycyIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsIngiLCJ5IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZ2V0Q29udGV4dCIsInB4IiwiTWF0aCIsInJhbmRvbSIsInB5IiwicCIsIm9yaWdpblgiLCJvcmlnaW5ZIiwicHVzaCIsImkiLCJsZW5ndGgiLCJjbG9zZXN0IiwicDEiLCJqIiwicDIiLCJwbGFjZWQiLCJrIiwidW5kZWZpbmVkIiwiZ2V0RGlzdGFuY2UiLCJjIiwiQ2lyY2xlIiwiY2lyY2xlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1vdXNlTW92ZSIsInNjcm9sbENoZWNrIiwicmVzaXplIiwiZSIsInBvc3giLCJwb3N5IiwicGFnZVgiLCJwYWdlWSIsImNsaWVudFgiLCJjbGllbnRZIiwiYm9keSIsInNjcm9sbExlZnQiLCJkb2N1bWVudEVsZW1lbnQiLCJzY3JvbGxUb3AiLCJhbmltYXRlIiwic2hpZnRQb2ludCIsImNsZWFyUmVjdCIsImFicyIsImFjdGl2ZSIsImRyYXdMaW5lcyIsImRyYXciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJUd2VlbkxpdGUiLCJ0byIsImVhc2UiLCJDaXJjIiwiZWFzZUluT3V0Iiwib25Db21wbGV0ZSIsImJlZ2luUGF0aCIsIm1vdmVUbyIsImxpbmVUbyIsInN0cm9rZVN0eWxlIiwic3Ryb2tlIiwicG9zIiwicmFkIiwiY29sb3IiLCJfdGhpcyIsInJhZGl1cyIsImFyYyIsIlBJIiwiZmlsbFN0eWxlIiwiZmlsbCIsInBvdyJdLCJtYXBwaW5ncyI6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cUJOLEVBQXJCLEVBQXlCRSxFQUF6QixFQUE2QjtBQUN6QixlQUFPWixLQUFLK0QsR0FBTCxDQUFTckQsR0FBR2pCLENBQUgsR0FBT21CLEdBQUduQixDQUFuQixFQUFzQixDQUF0QixJQUEyQk8sS0FBSytELEdBQUwsQ0FBU3JELEdBQUdoQixDQUFILEdBQU9rQixHQUFHbEIsQ0FBbkIsRUFBc0IsQ0FBdEIsQ0FBbEM7QUFDSDtBQUVKLENBekxEIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgdmFyIHdpZHRoLCBoZWlnaHQsIGxhcmdlSGVhZGVyLCBjYW52YXMsIGN0eCwgcG9pbnRzLCB0YXJnZXQsIGFuaW1hdGVIZWFkZXIgPSB0cnVlO1xyXG5cclxuICAgIC8vIE1haW5cclxuICAgIGluaXRIZWFkZXIoKTtcclxuICAgIGluaXRBbmltYXRpb24oKTtcclxuICAgIGFkZExpc3RlbmVycygpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRIZWFkZXIoKSB7XHJcbiAgICAgICAgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuICAgICAgICBoZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcbiAgICAgICAgdGFyZ2V0ID0ge3g6IHdpZHRoLzIsIHk6IGhlaWdodC8yfTtcclxuXHJcbiAgICAgICAgbGFyZ2VIZWFkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGFyZ2UtaGVhZGVyJyk7XHJcbiAgICAgICAgbGFyZ2VIZWFkZXIuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0KydweCc7XHJcblxyXG4gICAgICAgIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZW1vLWNhbnZhcycpO1xyXG4gICAgICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcblxyXG4gICAgICAgIC8vIGNyZWF0ZSBwb2ludHNcclxuICAgICAgICBwb2ludHMgPSBbXTtcclxuICAgICAgICBmb3IodmFyIHggPSAwOyB4IDwgd2lkdGg7IHggPSB4ICsgd2lkdGgvMjApIHtcclxuICAgICAgICAgICAgZm9yKHZhciB5ID0gMDsgeSA8IGhlaWdodDsgeSA9IHkgKyBoZWlnaHQvMjApIHtcclxuICAgICAgICAgICAgICAgIHZhciBweCA9IHggKyBNYXRoLnJhbmRvbSgpKndpZHRoLzIwO1xyXG4gICAgICAgICAgICAgICAgdmFyIHB5ID0geSArIE1hdGgucmFuZG9tKCkqaGVpZ2h0LzIwO1xyXG4gICAgICAgICAgICAgICAgdmFyIHAgPSB7eDogcHgsIG9yaWdpblg6IHB4LCB5OiBweSwgb3JpZ2luWTogcHkgfTtcclxuICAgICAgICAgICAgICAgIHBvaW50cy5wdXNoKHApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBmb3IgZWFjaCBwb2ludCBmaW5kIHRoZSA1IGNsb3Nlc3QgcG9pbnRzXHJcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHBvaW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgY2xvc2VzdCA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgcDEgPSBwb2ludHNbaV07XHJcbiAgICAgICAgICAgIGZvcih2YXIgaiA9IDA7IGogPCBwb2ludHMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBwMiA9IHBvaW50c1tqXVxyXG4gICAgICAgICAgICAgICAgaWYoIShwMSA9PSBwMikpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcGxhY2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrID0gMDsgayA8IDU7IGsrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZighcGxhY2VkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihjbG9zZXN0W2tdID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3Nlc3Rba10gPSBwMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGsgPSAwOyBrIDwgNTsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCFwbGFjZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGdldERpc3RhbmNlKHAxLCBwMikgPCBnZXREaXN0YW5jZShwMSwgY2xvc2VzdFtrXSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZXN0W2tdID0gcDI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwMS5jbG9zZXN0ID0gY2xvc2VzdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGFzc2lnbiBhIGNpcmNsZSB0byBlYWNoIHBvaW50XHJcbiAgICAgICAgZm9yKHZhciBpIGluIHBvaW50cykge1xyXG4gICAgICAgICAgICB2YXIgYyA9IG5ldyBDaXJjbGUocG9pbnRzW2ldLCAyK01hdGgucmFuZG9tKCkqMiwgJ3JnYmEoMjU1LDI1NSwyNTUsMC4zKScpO1xyXG4gICAgICAgICAgICBwb2ludHNbaV0uY2lyY2xlID0gYztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRXZlbnQgaGFuZGxpbmdcclxuICAgIGZ1bmN0aW9uIGFkZExpc3RlbmVycygpIHtcclxuICAgICAgICBpZighKCdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdykpIHtcclxuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG1vdXNlTW92ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBzY3JvbGxDaGVjayk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW91c2VNb3ZlKGUpIHtcclxuICAgICAgICB2YXIgcG9zeCA9IDA7XHJcbiAgICAgICAgdmFyIHBvc3kgPSAwO1xyXG4gICAgICAgIGlmIChlLnBhZ2VYIHx8IGUucGFnZVkpIHtcclxuICAgICAgICAgICAgcG9zeCA9IGUucGFnZVg7XHJcbiAgICAgICAgICAgIHBvc3kgPSBlLnBhZ2VZO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChlLmNsaWVudFggfHwgZS5jbGllbnRZKSAgICB7XHJcbiAgICAgICAgICAgIHBvc3ggPSBlLmNsaWVudFggKyBkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQgKyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdDtcclxuICAgICAgICAgICAgcG9zeSA9IGUuY2xpZW50WSArIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wICsgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGFyZ2V0LnggPSBwb3N4O1xyXG4gICAgICAgIHRhcmdldC55ID0gcG9zeTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzY3JvbGxDaGVjaygpIHtcclxuICAgICAgICBpZihkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA+IGhlaWdodCkgYW5pbWF0ZUhlYWRlciA9IGZhbHNlO1xyXG4gICAgICAgIGVsc2UgYW5pbWF0ZUhlYWRlciA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVzaXplKCkge1xyXG4gICAgICAgIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XHJcbiAgICAgICAgaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgICAgIGxhcmdlSGVhZGVyLnN0eWxlLmhlaWdodCA9IGhlaWdodCsncHgnO1xyXG4gICAgICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gYW5pbWF0aW9uXHJcbiAgICBmdW5jdGlvbiBpbml0QW5pbWF0aW9uKCkge1xyXG4gICAgICAgIGFuaW1hdGUoKTtcclxuICAgICAgICBmb3IodmFyIGkgaW4gcG9pbnRzKSB7XHJcbiAgICAgICAgICAgIHNoaWZ0UG9pbnQocG9pbnRzW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYW5pbWF0ZSgpIHtcclxuICAgICAgICBpZihhbmltYXRlSGVhZGVyKSB7XHJcbiAgICAgICAgICAgIGN0eC5jbGVhclJlY3QoMCwwLHdpZHRoLGhlaWdodCk7XHJcbiAgICAgICAgICAgIGZvcih2YXIgaSBpbiBwb2ludHMpIHtcclxuICAgICAgICAgICAgICAgIC8vIGRldGVjdCBwb2ludHMgaW4gcmFuZ2VcclxuICAgICAgICAgICAgICAgIGlmKE1hdGguYWJzKGdldERpc3RhbmNlKHRhcmdldCwgcG9pbnRzW2ldKSkgPCA0MDAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9pbnRzW2ldLmFjdGl2ZSA9IDAuMztcclxuICAgICAgICAgICAgICAgICAgICBwb2ludHNbaV0uY2lyY2xlLmFjdGl2ZSA9IDAuNjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihNYXRoLmFicyhnZXREaXN0YW5jZSh0YXJnZXQsIHBvaW50c1tpXSkpIDwgMjAwMDApIHtcclxuICAgICAgICAgICAgICAgICAgICBwb2ludHNbaV0uYWN0aXZlID0gMC4xO1xyXG4gICAgICAgICAgICAgICAgICAgIHBvaW50c1tpXS5jaXJjbGUuYWN0aXZlID0gMC4zO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKE1hdGguYWJzKGdldERpc3RhbmNlKHRhcmdldCwgcG9pbnRzW2ldKSkgPCA0MDAwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvaW50c1tpXS5hY3RpdmUgPSAwLjAyO1xyXG4gICAgICAgICAgICAgICAgICAgIHBvaW50c1tpXS5jaXJjbGUuYWN0aXZlID0gMC4xO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBwb2ludHNbaV0uYWN0aXZlID0gMDtcclxuICAgICAgICAgICAgICAgICAgICBwb2ludHNbaV0uY2lyY2xlLmFjdGl2ZSA9IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgZHJhd0xpbmVzKHBvaW50c1tpXSk7XHJcbiAgICAgICAgICAgICAgICBwb2ludHNbaV0uY2lyY2xlLmRyYXcoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2hpZnRQb2ludChwKSB7XHJcbiAgICAgICAgVHdlZW5MaXRlLnRvKHAsIDErMSpNYXRoLnJhbmRvbSgpLCB7eDpwLm9yaWdpblgtNTArTWF0aC5yYW5kb20oKSoxMDAsXHJcbiAgICAgICAgICAgIHk6IHAub3JpZ2luWS01MCtNYXRoLnJhbmRvbSgpKjEwMCwgZWFzZTpDaXJjLmVhc2VJbk91dCxcclxuICAgICAgICAgICAgb25Db21wbGV0ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBzaGlmdFBvaW50KHApO1xyXG4gICAgICAgICAgICB9fSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2FudmFzIG1hbmlwdWxhdGlvblxyXG4gICAgZnVuY3Rpb24gZHJhd0xpbmVzKHApIHtcclxuICAgICAgICBpZighcC5hY3RpdmUpIHJldHVybjtcclxuICAgICAgICBmb3IodmFyIGkgaW4gcC5jbG9zZXN0KSB7XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4Lm1vdmVUbyhwLngsIHAueSk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lVG8ocC5jbG9zZXN0W2ldLngsIHAuY2xvc2VzdFtpXS55KTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ3JnYmEoMTU2LDIxNywyNDksJysgcC5hY3RpdmUrJyknO1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIENpcmNsZShwb3MscmFkLGNvbG9yKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuXHJcbiAgICAgICAgLy8gY29uc3RydWN0b3JcclxuICAgICAgICAoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIF90aGlzLnBvcyA9IHBvcyB8fCBudWxsO1xyXG4gICAgICAgICAgICBfdGhpcy5yYWRpdXMgPSByYWQgfHwgbnVsbDtcclxuICAgICAgICAgICAgX3RoaXMuY29sb3IgPSBjb2xvciB8fCBudWxsO1xyXG4gICAgICAgIH0pKCk7XHJcblxyXG4gICAgICAgIHRoaXMuZHJhdyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZighX3RoaXMuYWN0aXZlKSByZXR1cm47XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4LmFyYyhfdGhpcy5wb3MueCwgX3RoaXMucG9zLnksIF90aGlzLnJhZGl1cywgMCwgMiAqIE1hdGguUEksIGZhbHNlKTtcclxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDE1NiwyMTcsMjQ5LCcrIF90aGlzLmFjdGl2ZSsnKSc7XHJcbiAgICAgICAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBVdGlsXHJcbiAgICBmdW5jdGlvbiBnZXREaXN0YW5jZShwMSwgcDIpIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5wb3cocDEueCAtIHAyLngsIDIpICsgTWF0aC5wb3cocDEueSAtIHAyLnksIDIpO1xyXG4gICAgfVxyXG5cclxufSkoKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2xvZ2luL2pzL2RlbW8tMS5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvbG9naW4vY3NzL2xvZ2luLmNzcz9lMmQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9sb2dpbi9jc3MvbG9naW4uY3NzXG4vLyBtb2R1bGUgaWQgPSAxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\n\n__webpack_require__(12);\n\n__webpack_require__(7);\n__webpack_require__(6);\n//require('./rAF.js');\n__webpack_require__(8);\n\n//;(function(){\n/*$(\".input\").each(function(i){\r\n\t//获取焦点事件\r\n\t$(this).focus(function(){\r\n\t\tvar $this = $(this);\r\n\t\t//$this.siblings().blur();\r\n\t\t$this.css(\"borderBottom\",\"4px solid #3499DA\");\r\n\t\t$this.prev().css(\"color\",\"#3499DA\");\r\n\t\tif($this.val().trim()){\r\n\t\t\t$this.keydown(function(){\r\n\t\t\t\t$this.next().fadeOut(500);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\t$this.next().fadeOut(500);\r\n\t\t}\r\n\t});\r\n\n\t//失去焦点事件\r\n\t$(this).blur(function(){\r\n\t\t$this = $(this);\r\n\t\tif(!$this.val().trim()){\r\n\t\t\talert(\"失去焦点时值为空\")\r\n\t\t\t$this.css(\"borderBottom\",\"\");\r\n\t\t\t$this.prev().css(\"color\",\"\");\r\n\t\t}else{\r\n\t\t\talert(\"失去焦点时有值\")\r\n\t\t\tif($this.has(\"#user\")){\r\n\t\t\t\talert(1)\r\n\t\t\t}\r\n\t\t\tif($this.has(\"#email\")){\r\n\t\t\t\talert(2)\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\n\t//去提示\r\n\t$(this).keydown(function(){\r\n\t\t$(\"#tip\").fadeOut(500);\r\n\t});\r\n});*/\nmodule.exports = function () {\n\t//登录、注册、找回密码\n\tvar user = {\n\t\tgetLogin: function getLogin() {\n\t\t\tvar name = $(\"#user\").val().trim();\n\t\t\tvar password = $(\"#pwd\").val().trim();\n\t\t\tvar verifyCode = $(\"#vfy\").val().trim();\n\n\t\t\tif (!password && !name) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入登录信息！\", 3000);\n\t\t\t\t$(\"#user\").focus();\n\t\t\t}\n\t\t\tif (password && !name) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入用户名！\", 3000);\n\t\t\t\t$(\"#user\").focus();\n\t\t\t}\n\t\t\tif (!password && name) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入密码！\", 3000);\n\t\t\t\t$(\"#pwd\").focus();\n\t\t\t}\n\t\t\tif (!verifyCode && password && name) {\n\t\t\t\tvar params = { name: name, password: password };\n\t\t\t\tuser.login(params);\n\t\t\t}\n\t\t\tif (verifyCode && password && name) {\n\t\t\t\tvar params = { name: name, password: password, verifyCode: verifyCode };\n\t\t\t\tuser.login(params);\n\t\t\t}\n\t\t},\n\t\tlogin: function login(params) {\n\n\t\t\t$(\"#login\").val(\"登录中...\");\n\t\t\t$(\"#login\").removeAttr(\"onclick\");\n\n\t\t\t$.ajax({\n\t\t\t\ttype: \"post\",\n\t\t\t\turl: basePath + \"/user/login\",\n\t\t\t\tdata: params,\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tif (data == \"success\") {\n\t\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconsuccess\", \"#0FFD0F\", \"登录成功请稍等！\", 3000);\n\t\t\t\t\t\t$(\"#pwd\").next().fadeIn(500).removeClass(\"icon-iconerror\").addClass(\"icon-iconsuccess\");\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\twindow.location.href = basePath + \"/index\";\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t} else if (data == \"pswError\") {\n\t\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconerror\", \"red\", \"您输入的密码有误！\", 3000);\n\t\t\t\t\t\t$(\"#pwd\").focus().next().fadeIn(500).removeClass(\"icon-iconsuccess\").addClass(\"icon-iconerror\");\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t$(\"#login\").val(\"登   录\");\n\t\t\t\t\t\t\t$(\"#login\").attr(\"onclick\", \"user.getLogin()\");\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tgetRegist: function getRegist() {\n\t\t\tvar name = $(\"#user\").val().trim();\n\t\t\tvar password = $(\"#pwd\").val().trim();\n\t\t\tvar email = $(\"#email\").val().trim();\n\t\t\tvar verifyCode = $(\"#vfy\").val().trim();\n\n\t\t\tif (!password && !name && !email) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入注册信息！\", 3000);\n\t\t\t\t$(\"#user\").focus();\n\t\t\t}\n\t\t\tif (password && !name) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入用户名！\", 3000);\n\t\t\t\t$(\"#user\").focus();\n\t\t\t}\n\t\t\tif (!password && name) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入密码！\", 3000);\n\t\t\t\t$(\"#pwd\").focus();\n\t\t\t}\n\t\t\tif (password && name && !email) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入邮箱！\", 3000);\n\t\t\t\t$(\"#email\").focus();\n\t\t\t}\n\t\t\tif (!verifyCode && password && name && email) {\n\t\t\t\talert(1);\n\t\t\t\tvar params = { name: name, password: password, email: email };\n\t\t\t\tuser.regist(params);\n\t\t\t}\n\t\t\tif (verifyCode && password && name && email) {\n\t\t\t\tvar params = { name: name, password: password, email: email, verifyCode: verifyCode };\n\t\t\t\tuser.regist(params);\n\t\t\t}\n\t\t},\n\t\tregist: function regist(params) {\n\t\t\t$(\"#login\").val(\"注册中...\");\n\t\t\t$(\"#login\").removeAttr(\"onclick\");\n\t\t\t$.ajax({\n\t\t\t\ttype: \"post\",\n\t\t\t\turl: basePath + \"/user/regist\",\n\t\t\t\tdata: params,\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tif (data == \"success\") {\n\t\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconsuccess\", \"#0FFD0F\", \"注册成功请前往邮箱进行激活！\", 3000);\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\twindow.location.href = basePath + \"/login\";\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t} else if (data == \"fail\") {\n\t\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconerror\", \"red\", \"注册失败,请重新进行注册！\", 3000);\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t$(\"#login\").val(\"注   册\");\n\t\t\t\t\t\t\t$(\"#login\").attr(\"onclick\", \"user.getRegist()\");\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tgetFindPwd: function getFindPwd() {\n\t\t\tvar name = $(\"#user\").val().trim();\n\t\t\tvar email = $(\"#email\").val().trim();\n\t\t\tvar verifyCode = $(\"#vfy\").val().trim();\n\n\t\t\tif (!name && !email) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入完整信息！\", 3000);\n\t\t\t\t$(\"#user\").focus();\n\t\t\t}\n\t\t\tif (name && !email) {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-warn\", \"yellow\", \"请输入邮箱！\", 3000);\n\t\t\t\t$(\"#email\").focus();\n\t\t\t}\n\t\t\tif (!verifyCode && name && email) {\n\t\t\t\tvar params = { name: name, email: email };\n\t\t\t\tuser.findPwd(params);\n\t\t\t}\n\t\t\tif (verifyCode && name && email) {\n\t\t\t\tvar params = { name: name, email: email, verifyCode: verifyCode };\n\t\t\t\tuser.findPwd(params);\n\t\t\t}\n\t\t},\n\t\tfindPwd: function findPwd(params) {\n\t\t\t$(\"#login\").val(\"找回密码中...\");\n\t\t\t$(\"#login\").removeAttr(\"onclick\");\n\t\t\t$.ajax({\n\t\t\t\ttype: \"post\",\n\t\t\t\turl: basePath + \"/user/findPwd\",\n\t\t\t\tdata: params,\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tif (data == \"success\") {} else if (data == \"pswError\") {}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n};\nfunction blur(obj) {\n\talert(\"失去焦点\");\n\tvar val = $(obj).val().trim();\n\tif (val) {\n\t\tif ($(obj).has(\"#user\")) {\n\t\t\talert(1);\n\t\t}\n\t\tif ($(obj).has(\"#email\")) {\n\t\t\talert(2);\n\t\t}\n\t} else {\n\t\t$(obj).css(\"borderBottom\", \"\");\n\t\t$(obj).prev().css(\"color\", \"\");\n\t}\n};\n\nfunction focus(obj) {\n\talert(\"获取焦点\");\n\t$(obj).css(\"borderBottom\", \"4px solid #3499DA\");\n\t$(obj).prev().css(\"color\", \"#3499DA\");\n\tvar val = $(obj).val().trim();\n\tif (val) {} else {}\n};\n\n//清空按钮\n$(\".icon\").click(function () {\n\tif ($(this).attr(\"class\").indexOf(\"icon-iconerror\") != -1) {\n\t\t$(this).prev().val(\"\").focus();\n\t\t$(this).fadeOut(\"slow\");\n\t}\n});\n\n//检查用户名\nfunction checkUser(obj) {\n\tvar name = $(obj).val().trim();\n\tif (!name) return;\n\tvar params = { name: name };\n\t$.ajax({\n\t\ttype: \"post\",\n\t\turl: basePath + \"/user/checkName\",\n\t\tdata: params,\n\t\tsuccess: function success(data) {\n\t\t\tif (data == \"nameCorrect\") {\n\t\t\t\tif ($(this).parents(\"#loginBox\").find(\"h1\").text() == \"login\" || $(this).parents(\"#loginBox\").find(\"h1\").text() == \"findPassword\") {\n\t\t\t\t\t$(\"#user\").next().fadeIn(500).removeClass(\"icon-iconerror\").addClass(\"icon-iconsuccess\");\n\t\t\t\t} else {\n\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconerror\", \"red\", \"该用户已经被注册,请换个用户名吧^_^！\", 3000);\n\t\t\t\t\t$(\"#user\").focus().next().fadeIn(500).removeClass(\"icon-iconsuccess\").addClass(\"icon-iconerror\");\n\t\t\t\t}\n\t\t\t} else if (data == \"nameError\") {\n\t\t\t\tif ($(this).parents(\"#loginBox\").find(\"h1\").text() == \"login\" || $(this).parents(\"#loginBox\").find(\"h1\").text() == \"findPassword\") {\n\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconerror\", \"red\", \"您输入的用户名有误！\", 3000);\n\t\t\t\t\t$(\"#user\").focus().next().fadeIn(500).removeClass(\"icon-iconsuccess\").addClass(\"icon-iconerror\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#user\").next().fadeIn(500).removeClass(\"icon-iconerror\").addClass(\"icon-iconsuccess\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\n//检查邮箱\nfunction checkEmail(obj) {\n\tvar email = $(obj).val().trim();\n\tif (!email) return;\n\t$.ajax({\n\t\ttype: \"post\",\n\t\turl: basePath + \"/user/checkEmail\",\n\t\tdata: \"userEmail=\" + email,\n\t\tsuccess: function success(data) {\n\t\t\t//找到邮箱\n\t\t\tif (data == \"EmailIsAlive\") {\n\t\t\t\tif ($(\"#email\").parents(\"#loginBox\").find(\"h1\").text() == \"regist\") {\n\t\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconerror\", \"red\", \"该邮箱已经被注册,请换个邮箱吧^_^！\", 3000);\n\t\t\t\t\t$(\"#email\").focus().next().fadeIn(500).removeClass(\"icon-iconsuccess\").addClass(\"icon-iconerror\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#email\").next().fadeIn(500).removeClass(\"icon-iconerror\").addClass(\"icon-iconsuccess\");\n\t\t\t\t}\n\t\t\t\t//找不到邮箱\n\t\t\t} else if (data == \"EmailIsCorrect\") {\n\t\t\t\t$(\"#email\").next().fadeIn(500).removeClass(\"icon-iconerror\").addClass(\"icon-iconsuccess\");\n\t\t\t\t//邮箱格式有误\n\t\t\t} else if (data == \"emailError\") {\n\t\t\t\tshowTip(\"bounceInDown\", \"icon-iconerror\", \"red\", \"您输入的邮箱格式有误,请重新输入吧^_^！\", 3000);\n\t\t\t\t$(\"#email\").focus().next().fadeIn(500).removeClass(\"icon-iconsuccess\").addClass(\"icon-iconerror\");\n\t\t\t}\n\t\t}\n\t});\n};\n\n//展示提示框信息\nfunction showTip(animate, icon, color, message, time) {\n\t$(\"#tip\").css(\"display\", \"block\");\n\t$(\"#tip\").removeClass().addClass(\"animated \" + animate);\n\t$(\"#tip\").empty().append(\"<div class='tip_conts'>\" + \"\t<i class='iconfont \" + icon + \"' style='color:\" + color + \"'></i>\" + \"\t<span class='tip_txt'>\" + message + \"</span>\" + \"</div>\");\n\tsetTimeout(function () {\n\t\t$(\"#tip\").fadeOut();\n\t}, time);\n};\n\n//keydown事件\n$(\"html\").keydown(function (event) {\n\talert(1);\n\tvar e = event || window.event;\n\tif (e.keyCode == 13) {\n\t\tuser.getLogin();\n\t} else if (e.keyCode == 40) {\n\t\t$(\".input\").each(function (i) {});\n\t\t$(\"#user\").blur();\n\t\t$(\"#pwd\").focus();\n\t} else if (e.keyCode == 38) {\n\t\t$(\"#user\").focus();\n\t\t$(\"#pwd\").blur();\n\t}\n});\n\n//})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
],[16]);